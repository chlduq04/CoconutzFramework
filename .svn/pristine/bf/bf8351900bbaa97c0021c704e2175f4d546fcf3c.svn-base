package com.coconutz;

import java.util.Hashtable;
import java.util.StringTokenizer;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.newService.CoconutzSetting;


public class CoconutzQuery extends CoconutzSetting{
	protected JSONArray query;

	public CoconutzQuery(){
		query = new JSONArray();
	}
	public CoconutzQuery(JSONArray query){
		this.query  = query;
	}
	public void setQuery(JSONArray query){
		this.query = query;
	}
	public JSONArray getQuery(){
		JSONArray result = query;
		query = null;
		return result;
	}
	
	public void query_reset(){
		query = new JSONArray();
	}
	
	public String get(){
		JSONArray result = query;
		return result.toString();		
	}
	public String END(){
		return POP();
	}
	public String POP(){
		String argu = query.toString();
		query = new JSONArray();
		return argu;
	}
	public void setQuery( Hashtable<String, String> query ){		
		
	}
	private String[] Stringtoken( String argu ){
		StringTokenizer m = new StringTokenizer(argu, ",");
		String value[] = new String[m.countTokens()];
		int i=0; 
		while(m.hasMoreElements()){
			value[i++] = m.nextToken().trim();
		}
		return value;
	}	
	
	private CoconutzQuery superQuery( String key, String argu ) {
		JSONObject result;
		try {
			result = new JSONObject("{\"function\":\""+key+"\",\"param1\":\""+argu+"\"}");
			query.put(result);
		} catch (JSONException e) {
			e.printStackTrace();			
		}
		return this;
	}
	private CoconutzQuery superQuery( String key, String argu1,String argu2 ) {
		JSONObject result;
		try {
			result = new JSONObject("{\"function\":\""+key+"\",\"param1\":\""+argu1+"\",\"param2\":\""+argu2+"\"}");
			query.put(result);
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return this;
	}
	private CoconutzQuery superQuery( String key, String argu1,String argu2,String argu3 ) {
		JSONObject result;
		try {
			result = new JSONObject("{\"function\":\""+key+"\",\"param1\":\""+argu1+"\",\"param2\":\""+argu2+"\",\"param3\":\""+argu3+"\"}");
			query.put(result);
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return this;
	}
	
	public CoconutzQuery DELETE( String argu ){
		if(!hideCode)
			return superQuery("delete", argu);
		return superQuery(""+Cdelete, argu);
	}
	/*--select--*/
	/** Make Selct Query
	 * ex)
	 * select("table, name, argu")
	 * -> "SELECT table, name, argu"
	 **/
	
	public CoconutzQuery SELECT( String argu ) {
		if(!hideCode)
			return superQuery("select",argu);
		return superQuery(""+Cselect,argu);
	}
	//	public CoconutQuery select(String argu){
	//		return select(Stringtoken(argu));
	//	}
	//	public CoconutQuery select(String argu[]){
	//		String result = "SELECT ";
	//		for(int i=0;i<argu.length;i++){
	//			if(  i == argu.length-1 )
	//				result += argu[i];
	//			else
	//				result += argu[i] +",";
	//		}
	//		result += " ";
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery SELECT_MAX( String argu ) {
		if(!hideCode)
			return superQuery("select_max",argu);
		return superQuery(""+Cselect_max,argu);
	}
	//	public CoconutQuery select_max( String argu ){
	//		String result = "SELECT MAX("+argu+") as" + argu +" " + query;
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery SELECT_MAX( String argu, String as ) {
		if(!hideCode)
			return superQuery("select", argu, as);
		return superQuery(""+Cselect_max, argu, as);
	}
	//	public CoconutQuery select_max( String argu, String as ){
	//		String result = "SELECT MAX("+argu+") as" + as +" " + query;		
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery SELECT_MIN( String argu ) {
		if(!hideCode)
			return superQuery("select_min", argu );
		return superQuery(""+Cselect_min, argu );
	}
	public CoconutzQuery SELECT_MIN( String argu, String as ) {
		if(!hideCode)
			return superQuery("select_min", argu, as);
		return superQuery(""+Cselect_min, argu, as);
	}
	//	public CoconutQuery select_min( String argu ){
	//		String result = "SELECT MIN("+argu+") as" + argu +" " + query;;
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	public CoconutQuery select_min( String argu, String as ){
	//		String result = "SELECT MIN("+argu+") as" + as +" " + query;
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery SELECT_SUM( String argu) {
		if(!hideCode)
			return superQuery("select_sum", argu);
		return superQuery(""+Cselect_sum, argu);
	}
	public CoconutzQuery SELECT_SUM( String argu, String as ) {
		if(!hideCode)
			return superQuery("select_sum", argu, as);
		return superQuery(""+Cselect_sum, argu, as);
	}
	//	public CoconutQuery select_sum( String argu ){
	//		String result = "SELECT SUM("+argu+") as" + query;
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	public CoconutQuery select_sum( String argu ,String as){
	//		String result ="SELECT SUM("+argu+") as" + as +" " + query; 
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery SELECT_COUNT( String argu) {
		if(!hideCode)
			return superQuery("select_count", argu);
		return superQuery(""+Cselect_count, argu);
	}
	public CoconutzQuery SELECT_COUNT( String argu, String as ) {
		if(!hideCode)
			return superQuery("select_count", argu, as);
		return superQuery(""+Cselect_count, argu, as);
	}

	//	/*--from--*/
	public CoconutzQuery FROM( String argu ) {
		if(!hideCode)
			return superQuery("from",argu);
		return superQuery(""+Cfrom,argu);
	}
	//	public CoconutQuery from( String argu ){
	//		String result = "FROM " + argu +" ";
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	/*--join--*/
	public CoconutzQuery JOIN( String table){
		if(!hideCode)
			return superQuery("join", table);
		return superQuery(""+Cjoin, table);
	}
	
	public CoconutzQuery JOIN( String argu, String as ) {
		if(!hideCode)
			return superQuery("join", argu, as);
		return superQuery(""+Cjoin, argu, as);
	}
	//	public CoconutQuery join( String argu, String as ){
	//		String result = "JOIN " + argu +" ON "+ as +" ";
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery JOIN( String argu, String as, String option ) {
		if(!hideCode)
			return superQuery("join", argu, as, option);
		return superQuery(""+Cjoin, argu, as, option);
	}
	//	public CoconutQuery join( String argu, String as, String option ){
	//		String result = option +"JOIN " + argu +" ON "+ as +" ";;
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	/*--where--*/
	public CoconutzQuery WHERE( String argu, String value ) {
		if(!hideCode)
			return superQuery("where", argu, value);
		return superQuery(""+Cwhere, argu, value);
	}
	//	public CoconutQuery where( boolean where, String argu, String value ){
	//		return where(where,Stringtoken(argu),Stringtoken(value));
	//	}
	//	public CoconutQuery where( boolean where, String argu[], String value[] ){
	//		String result;
	//		if( where )
	//			result = "WHERE ";
	//		else
	//			result = "AND ";			
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i != argu.length-1 )
	//				result += argu[i] +" = '" + value[i] + "' AND ";
	//			else
	//				result += argu[i] +" = '" + value[i] + "' ";				
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	/*--or_where--*/
	public CoconutzQuery OR_WHERE( String argu, String value ) {
		if(!hideCode)
			return superQuery("or_where", argu, value);
		return superQuery(""+Cor_where, argu, value);
	}
	//	public CoconutQuery or_where(boolean where, String argu, String value ){
	//		return or_where(where, Stringtoken(argu),Stringtoken(value));
	//	}
	//	public CoconutQuery or_where( boolean where, String argu[], String value[] ){
	//		String result;
	//		if( where )
	//			result = "WHERE ";
	//		else
	//			result = "OR ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i != argu.length-1 )
	//				result += argu[i] +" = '" + value[i] + "' OR ";
	//			else
	//				result += argu[i] +" = '" + value[i] + "' ";				
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	/*--or_where_in--*/
	public CoconutzQuery OR_WHERE_IN( String argu, String value ) {
		if(!hideCode)
			return superQuery("or_where_in", argu, value);
		return superQuery(""+Cor_where_in, argu, value);
	}
	//	public CoconutQuery or_where_in( boolean where, String argu, String value ){
	//		return or_where_in(where, argu, Stringtoken(value));
	//	}
	//	public CoconutQuery or_where_in( boolean where, String argu, String value[] ){
	//		String result;
	//		if(where)
	//			result = "WHERE " + argu + " IN (";
	//		else
	//			result = "OR " + argu + " IN (";
	//		for( int i=0 ; i < value.length ; i++ ){
	//			if( i == value.length - 1 )
	//				result += value[i] + ")";
	//			else
	//				result += value[i] + ", ";
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	/*--where_not_in--*/
	public CoconutzQuery WHERE_NOT_IN( String argu, String value ) {
		if(!hideCode)
			return superQuery("where_not_in", argu, value);
		return superQuery(""+Cwhere_not_in, argu, value);
	}
	//	public CoconutQuery wehre_not_in( boolean where, String argu, String value ){
	//		return where_not_in(where, argu, Stringtoken(value));
	//	}
	//	public CoconutQuery where_not_in( boolean where, String argu, String value[] ){
	//		String result;
	//		if(where)
	//			result = "WHERE " + argu + " NOT IN (";
	//		else
	//			result = "AND " + argu + " NOT IN (";
	//		for( int i=0 ; i < value.length ; i++ ){
	//			if( i == value.length - 1 )
	//				result += value[i] + ")";
	//			else
	//				result += value[i] + ", ";
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	/*--or_where_not_in--*/
	public CoconutzQuery OR_WHERE_NOT_IN( String argu, String value ) {
		if(!hideCode)
			return superQuery("or_where_not_in",argu,value);
		return superQuery(""+Cor_where_not_in,argu,value);
	}

	//	public CoconutQuery or_where_not_in( boolean where, String argu, String value ){
	//		return or_where_not_in(where, argu, Stringtoken(value));
	//	}
	//	public CoconutQuery or_where_not_in( boolean where, String argu, String value[] ){
	//		String result;
	//		if(where)
	//			result = "WHERE " + argu + " NOT IN (";
	//		else
	//			result = "OR " + argu + " NOT IN (";
	//		for( int i=0 ; i < value.length ; i++ ){
	//			if( i == value.length - 1 )
	//				result += value[i] + ")";
	//			else
	//				result += value[i] + ", ";
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	/*--like--*/
//	public CoconutQuery like( String argu, String value ) {
//		return superQuery("like", argu,value);
//	}
	//	public CoconutQuery like( boolean where, String argu, String value ){
	//		return like(where, Stringtoken(argu), Stringtoken(value));
	//	}
	//	public CoconutQuery like( boolean where, String argu[], String value[] ){
	//		String result;
	//		if( where )
	//			result = "WHERE ";
	//		else
	//			result = "AND ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i != argu.length-1 )
	//				result += argu[i] +" = ' LIKE %" + value[i] + "% ' AND ";
	//			else
	//				result += argu[i] +" = ' LIKE %" + value[i] + "% ' ";				
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery LIKE( String argu, String value, String option ) {
		if(!hideCode)
			return superQuery("like",argu,value,option);
		return superQuery(""+Clike,argu,value,option);
	}
	//	public CoconutQuery like( boolean where, String argu, String value ,String option){
	//		return like(where, Stringtoken(argu), Stringtoken(value),option);
	//	}
	//	public CoconutQuery like( boolean where, String argu[], String value[],String option ){
	//		String result;
	//		if( where )
	//			result = "WHERE ";
	//		else
	//			result = "AND ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i == argu.length-1 ){
	//				if( option.equals("before") )
	//					result +=  argu[i]+"LIKE " +"%"+value[i] +" ";
	//				else if( option.equals("after") )
	//					result += argu[i]+"LIKE " + value[i]+"% ";
	//				else if( option.equals("both") )
	//					result += argu[i]+"LIKE " +"%"+ value[i] + "% ";		
	//				else
	//					result += argu[i]+"LIKE " + value[i] +" ";
	//			}else{
	//				if( option.equals("before") )
	//					result += argu[i]+"LIKE " +"%"+value[i] + " AND ";
	//				else if( option.equals("after") )
	//					result += argu[i]+"LIKE " + value[i]+"%" + " AND ";
	//				else if( option.equals("both") )
	//					result += argu[i]+"LIKE " +"%"+ value[i] + "%" + " AND ";		
	//				else
	//					result += argu[i]+"LIKE " + value[i] + " AND ";			
	//			}
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	
//	public CoconutQuery or_like( String argu, String value ) {
//		return superQuery("or_like", argu,value);
//	}	
	//	/*--or_like--*/
	//	public CoconutQuery or_like( boolean where, String argu, String value ){
	//		return or_like(where, Stringtoken(argu), Stringtoken(value));
	//	}
	//	public CoconutQuery or_like( boolean where, String argu[],String value[]){
	//		String result;
	//		if(where)
	//			result = "WHERE ";
	//		else
	//			result = "OR ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i != argu.length-1 )
	//				result += argu[i] +" = ' LIKE %" + value[i] + "% ' OR ";
	//			else
	//				result += argu[i] +" = ' LIKE %" + value[i] + "% ' ";				
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery OR_LIKE( String argu, String value ,String option) {
		if(!hideCode)
			return superQuery("or_like", argu, value, option);
		return superQuery(""+Cor_like, argu, value, option);
	}

	//	public CoconutQuery or_like( boolean where, String argu,String value,String option){
	//		return or_like(where, Stringtoken(argu), Stringtoken(value), option);
	//	}
	//	public CoconutQuery or_like( boolean where,String argu[],String value[],String option){
	//		String result;
	//		if( where )
	//			result = "WHERE ";
	//		else
	//			result = "OR ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i == argu.length-1 ){
	//				if( option.equals("before") )
	//					result +=  argu[i]+"LIKE " +"%"+value[i] +" ";
	//				else if( option.equals("after") )
	//					result += argu[i]+"LIKE " + value[i]+"% ";
	//				else if( option.equals("both") )
	//					result += argu[i]+"LIKE " +"%"+ value[i] + "% ";		
	//				else
	//					result += argu[i]+"LIKE " + value[i] +" ";
	//			}else{
	//				if( option.equals("before") )
	//					result += argu[i]+"LIKE " +"%"+value[i] + " OR ";
	//				else if( option.equals("after") )
	//					result += argu[i]+"LIKE " + value[i]+"%" + " OR ";
	//				else if( option.equals("both") )
	//					result += argu[i]+"LIKE " +"%"+ value[i] + "%" + " OR ";		
	//				else
	//					result += argu[i]+"LIKE " + value[i] + " OR ";			
	//			}
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery NOT_LIKE( String argu, String value ) {
		if(!hideCode)
			return superQuery("not_like", argu, value);
		return superQuery(""+Cnot_like, argu, value);
	}	
	//	public CoconutQuery not_like( boolean where,String argu,String value){
	//		return not_like(where, Stringtoken(argu), Stringtoken(value));
	//	}
	//	public CoconutQuery not_like( boolean where,String argu[],String value[]){
	//		String result;
	//		if(where)
	//			result = "WHERE ";
	//		else
	//			result = "AND ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i != argu.length-1 )
	//				result += argu[i] +" = ' NOT LIKE %" + value[i] + "% ' AND ";
	//			else
	//				result += argu[i] +" = ' NOT LIKE %" + value[i] + "% ' ";				
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery OR_WHERE_NOT_IN( String argu, String value, String option ) {
		if(!hideCode)
			return superQuery("or_where_not_in",argu,value,option);
		return superQuery(""+Cor_where_not_in,argu,value,option);
	}	
	//	public CoconutQuery not_like( boolean where,String argu,String value,String option){
	//		return not_like(where, Stringtoken(argu), Stringtoken(value),option);
	//	}
	//	public CoconutQuery not_like( boolean where,String argu[],String value[],String option){
	//		String result;
	//		if( where )
	//			result = "WHERE ";
	//		else
	//			result = "AND ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i == argu.length-1 ){
	//				if( option.equals("before") )
	//					result +=  argu[i]+"NOT LIKE " +"%"+value[i] +" ";
	//				else if( option.equals("after") )
	//					result += argu[i]+"NOT LIKE " + value[i]+"% ";
	//				else if( option.equals("both") )
	//					result += argu[i]+"NOT LIKE " +"%"+ value[i] + "% ";		
	//				else
	//					result += argu[i]+"NOT LIKE " + value[i] +" ";
	//			}else{
	//				if( option.equals("before") )
	//					result += argu[i]+"NOT LIKE " +"%"+value[i] + " AND ";
	//				else if( option.equals("after") )
	//					result += argu[i]+"NOT LIKE " + value[i]+"%" + " AND ";
	//				else if( option.equals("both") )
	//					result += argu[i]+"NOT LIKE " +"%"+ value[i] + "%" + " AND ";		
	//				else
	//					result += argu[i]+"NOT LIKE " + value[i] + " AND ";			
	//			}
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery OR_NOT_LIKE( String argu, String value ) {
		if(!hideCode)
			return superQuery("or_not_like",argu,value);
		return superQuery(""+Cor_not_like,argu,value);
	}	
	//	public CoconutQuery or_not_like( boolean where, String argu,String value){
	//		return or_not_like(where, Stringtoken(argu), Stringtoken(value));
	//	}
	//	public CoconutQuery or_not_like( boolean where, String argu[],String value[]){
	//		String result;
	//		if(where)
	//			result = "WHERE ";
	//		else
	//			result = "OR ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i != argu.length-1 )
	//				result += argu[i] +" = ' NOT LIKE %" + value[i] + "% ' AND ";
	//			else
	//				result += argu[i] +" = ' NOT LIKE %" + value[i] + "% ' ";				
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery OR_NOT_LIKE( String argu, String value, String option ) {
		if(!hideCode)
			return superQuery("or_not_like",argu,value,option);
		return superQuery(""+Cor_not_like,argu,value,option);
	}
	//	public CoconutQuery or_not_like( boolean where, String argu,String value,String option){
	//		return or_not_like(where, Stringtoken(argu), Stringtoken(value),option);
	//	}
	//	public CoconutQuery or_not_like( boolean where, String argu[],String value[],String option){
	//		String result;
	//		if( where )
	//			result = "WHERE ";
	//		else
	//			result = "OR ";
	//		for( int i=0 ; i < argu.length ; i++ ){
	//			if( i == argu.length-1 ){
	//				if( option.equals("before") )
	//					result +=  argu[i]+"NOT LIKE " +"%"+value[i] +" ";
	//				else if( option.equals("after") )
	//					result += argu[i]+"NOT LIKE " + value[i]+"% ";
	//				else if( option.equals("both") )
	//					result += argu[i]+"NOT LIKE " +"%"+ value[i] + "% ";		
	//				else
	//					result += argu[i]+"NOT LIKE " + value[i] +" ";
	//			}else{
	//				if( option.equals("before") )
	//					result += argu[i]+"NOT LIKE " +"%"+value[i] + " OR ";
	//				else if( option.equals("after") )
	//					result += argu[i]+"NOT LIKE " + value[i]+"%" + " OR ";
	//				else if( option.equals("both") )
	//					result += argu[i]+"NOT LIKE " +"%"+ value[i] + "%" + " OR ";		
	//				else
	//					result += argu[i]+"NOT LIKE " + value[i] + " OR ";			
	//			}
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery GROUP_BY( String argu ) {
		if(!hideCode)
			return superQuery("group_by",argu );
		return superQuery(""+Cgroup_by,argu );
	}
	//	public CoconutQuery group_by( String argu ){
	//		return group_by(Stringtoken(argu));
	//	}
	//	public CoconutQuery group_by( String argu[]){
	//		String result = "GROUP BY " ;
	//		for(int i=0;i<argu.length;i++){
	//			if( i != argu.length -1 )
	//				result += argu[i] + " , ";
	//			else
	//				result += argu[i] + " ";
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery DISTINCT() {
		if(!hideCode)
			return superQuery("distinct","");
		return superQuery(""+Cdistinct,"");
	}
	//	public void distinct(){
	//		String value = "SELECT";
	//		int check=-1;
	//		for( int i=-1 ; (i = query.indexOf(value, i+1)) != -1 ; ){
	//			check = i+value.length();
	//		}
	//		if(check > 0){
	//			query.replace(0, query.length(), query.substring(0, check) + " DISTINCT" + query.substring(check,query.length()));
	//		}
	//	}
	public CoconutzQuery HAVING( String argu, boolean escape ) {
		String bool = " "+escape;
		if(!hideCode)
			return superQuery("having",argu,bool.toUpperCase());
		return superQuery(""+Chaving,argu,bool.toUpperCase());
	}	
	//	public CoconutQuery having(  String value, boolean escape ){
	//		return having(Stringtoken(value), escape);
	//	}
	//	public CoconutQuery having( String value[], boolean escape ){
	//		String result = "HAVING ";
	//		for(int i=0;i<value.length;i++){
	//			if( i == value.length )
	//				result += value[i]+ " ";
	//			else
	//				result += value[i]+ " , ";
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery OR_HAVING( String argu, boolean escape  ) {
		String bool = " "+escape;
		if(!hideCode)
			return superQuery("or_having",argu,bool.toUpperCase());
		return superQuery(""+Cor_having,argu,bool.toUpperCase());
	}	
	//	public CoconutQuery or_having( String value, boolean escape ){
	//		return or_having(Stringtoken(value), escape);
	//	}
	//	public CoconutQuery or_having( String value[], boolean escape ){
	//		String result = "HAVING ";
	//		for(int i=0;i<value.length;i++){
	//			if( i == value.length )
	//				result += value[i]+ " ";
	//			else
	//				result += value[i]+ " OR ";
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	public CoconutzQuery ORDER_BY( String argu, String option ) {
		switch(option){
		case "asc": case "ASC" :
		case "desc": case "DESC" :
		case "random": case "RANDOM" :
			break;
		default:
			option = "";
			break;
		}
		if(!hideCode)
			return superQuery("order_by",argu,option);
		return superQuery(""+Corder_by,argu,option);
	}	
	//	public CoconutQuery order_by( String argu, String order_option ){
	//		return order_by(Stringtoken(argu), Stringtoken(order_option));
	//	}
	//	public CoconutQuery order_by( String argu[], String order_option[] ){
	//		String result = "ORDER BY ";		
	//		for(int i=0;i<argu.length;i++){
	//			if( i == argu.length-1 )
	//				result += " "+ argu[i] +" "+order_option[i] +" ";
	//			else
	//				result += " "+ argu[i] +" "+order_option[i] +", ";
	//		}
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	//	
//	public CoconutQuery limit( int argu ) {
//		return superQuery("limit", ""+argu);
//	}
	//	public CoconutQuery limit(int limit){
	//		String result = "LIMIT "+limit+" ";
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}
	
	public CoconutzQuery LIMIT( int argu ) {
		if(!hideCode)
			return superQuery("limit", ""+argu);
		return superQuery(""+Climit, ""+argu);
	}	
	public CoconutzQuery LIMIT( int argu,int offset ) {
		if(!hideCode)
			return superQuery("limit", ""+argu,""+offset);
		return superQuery(""+Climit, ""+argu,""+offset);
	}	
	//	public CoconutQuery limit(int limit, int offset){
	//		String result = "LIMIT "+limit+" "+offset+" ";
	//		query.append(result);
	//		return new CoconutQuery( query );
	//	}	
	public CoconutzQuery INSERT( String table, String argu, String value ) {
		if(!hideCode)
			return superQuery("insert", table, argu, value);
		return superQuery(""+Cinsert, table, argu, value);
	}
	//	public void insert( String table, String argu, String value ){
	//		insert(table, Stringtoken(argu), Stringtoken(value));
	//	}
	//	public void insert( String table, String argu[], String value[] ){
	//		String result = "INSERT INTO " + table + "(";
	//		for( int i=0 ; i<argu.length ; i++ ){
	//			if( i == argu.length-1 )
	//				result += " "+ argu[i] + ") VALUES (";
	//			else
	//				result += " "+argu[i] + ", ";
	//		}
	//		for( int i=0; i<value.length ; i++){
	//			if( i == argu.length-1 )
	//				result += " '"+ value[i] + "') ";
	//			else
	//				result += " '"+ value[i] + "', ";			
	//		}
	//		query.append(result);
	//	}
	//	public void insert( String table, String argu[], String value[][] ){
	//		String result = "INSERT INTO " + table + "(";
	//		for( int i=0 ; i<argu.length ; i++ ){
	//			if( i == argu.length-1 )
	//				result += " "+ argu[i] + ") VALUES ";
	//			else
	//				result += " "+argu[i] + ", ";
	//		}
	//		for (int i = 0; i < value.length; i++) {
	//			result += " ( ";
	//			for( int j = 0; j < value[i].length ; j++){
	//				if( j == value[i].length-1 )
	//					result += " '"+ value[j] + "'  ";
	//				else
	//					result += " '"+ value[j] + "', ";			
	//			}		
	//			
	//			if( i == value.length-1 )
	//				result += ") ";
	//			else
	//				result += "), ";
	//		}
	//		query.append(result);
	//	}
	//	/**coconut ci - insert**/
	public CoconutzQuery SET( String argu ) {
		if(!hideCode)
			return superQuery("set", argu);
		return superQuery(""+Cset, argu);
	}
	//	public void set(){}
	//	/**coconut ci - insert batch**/	
	//	public void insert_batch(String table, String argu, String value){
	//		insert(table, argu, value);
	//		//+ escape
	//	}
	//	/**coconut ci - insert batch**/	

	//	public void insert_batch(String table, String argu[], String value[]){
	//		insert(table, argu, value);
	//		//+ escape
	//	}
	//	/**coconut ci - insert batch**/	
	//	public void insert_batch(String table, String argu[], String value[][]){
	//		insert(table, argu, value);
	//		//+ escape
	//	}
	public CoconutzQuery UPDATE(String argu) {
		if(!hideCode)
			return superQuery("update", argu);
		return superQuery(""+Cupdate, argu);
	}
	//	/**coconut ci - update**/		
	//	public void update( String table,String argu, String value ){
	//	}
	//	/**coconut ci - update**/		
	//	public void update( String table,String argu[], String value[] ){
	//	}
	//	/**coconut ci - update_batch**/		
	//	public void update_batch( String table, String argu, String value ){
	//		update(table, argu, value);
	//		//+ escape
	//	}
	//	/**coconut ci - update_batch**/		
	//	public void update_batch( String table, String argu[], String value[] ){
	//		update(table, argu, value);
	//		//+ escape
	//	}
	//	/**coconut ci - delete**/	
		
	//	public void delete( String table ){}
	//	/**coconut ci - delete**/		
	//	public void delete( String table, String where ){}
	//	/**coconut ci - delete**/		
	//	public void delete( String table[] ){}
	//	/**coconut ci - count_all**/

	//	public int count_all( String argu ){
	//		int result = 0;
	//		return result;
	//	}

	//	/**coconut ci - count_all_result**/
	//	public int count_all_result( String argu ){
	//		int result =0;
	//		return result;
	//	}
	//	/**coconut ci - escape**/
	//	public String escape( String argu ){
	//		return argu;
	//	}

}
